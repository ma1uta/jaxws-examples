
package org.sav.jaxws;

import javax.jws.Oneway;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 */
@WebService(name = "OrgsynchService",
            targetNamespace = "http://localhost:8080/jaxws/services/OrgsynchService")
@XmlSeeAlso({
                    ObjectFactory.class
            })
public interface OrgsynchService {


    /**
     * @param parameters
     */
    @WebMethod(operationName = "UpdateEmployee", action = "urn:UpdateEmployee")
    @Oneway
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    void updateEmployee(
            @WebParam(name = "Employee_DCTM_Request_MT", partName = "parameters")
            EmployeeDCTMRequestMT parameters);

    /**
     * @param parameters
     */
    @WebMethod(operationName = "UpdateDepartment", action = "urn:UpdateDepartment")
    @Oneway
    @SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
    void updateDepartment(
            @WebParam(name = "OrgStructure_Request_MT", partName = "parameters")
            OrgStructureRequestMT parameters);

    /**
     * @param argument
     */
    @WebMethod(action = "urn:testMethod")
    @RequestWrapper(localName = "testMethod",
                    className = "org.sav.jaxws.TestMethod")
    @ResponseWrapper(localName = "testMethodResponse",
                     className = "org.sav.jaxws.TestMethodResponse")
    void testMethod(
            @WebParam(name = "argument", targetNamespace = "", mode = WebParam.Mode.INOUT)
            Holder<String> argument);

}
